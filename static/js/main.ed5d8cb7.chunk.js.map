{"version":3,"sources":["reducer/cardContext.ts","AboutGame.tsx","Cards/spades/closekards.gif","NextRound.tsx","Players.tsx","sound/click.mp3","sound/computerWin.mp3","sound/userWin.mp3","sound/gameEnd.mp3","Card.tsx","Cards/clubs/c_2.gif","Cards/clubs/c_3.gif","Cards/clubs/c_4.gif","Cards/clubs/c_5.gif","Cards/clubs/c_6.gif","Cards/clubs/c_7.gif","Cards/clubs/c_8.gif","Cards/clubs/c_9.gif","Cards/clubs/c_10.gif","Cards/clubs/c_jack.gif","Cards/clubs/c_queen.gif","Cards/clubs/c_king.gif","Cards/clubs/c_ace.gif","Cards/diamonds/d_2.gif","Cards/diamonds/d_3.gif","Cards/diamonds/d_4.gif","Cards/diamonds/d_5.gif","Cards/diamonds/d_6.gif","Cards/diamonds/d_7.gif","Cards/diamonds/d_8.gif","Cards/diamonds/d_9.gif","Cards/diamonds/d_10.gif","Cards/diamonds/d_jack.gif","Cards/diamonds/d_queen.gif","Cards/diamonds/d_king.gif","Cards/diamonds/d_ace.gif","Cards/hearts/h_2.gif","Cards/hearts/h_3.gif","Cards/hearts/h_4.gif","Cards/hearts/h_5.gif","Cards/hearts/h_6.gif","Cards/hearts/h_7.gif","Cards/hearts/h_8.gif","Cards/hearts/h_9.gif","Cards/hearts/h_10.gif","Cards/hearts/h_jack.gif","Cards/hearts/h_queen.gif","Cards/hearts/h_king.gif","Cards/hearts/h_ace.gif","Cards/spades/s_2.gif","Cards/spades/s_3.gif","Cards/spades/s_4.gif","Cards/spades/s_5.gif","Cards/spades/s_6.gif","Cards/spades/s_7.gif","Cards/spades/s_8.gif","Cards/spades/s_9.gif","Cards/spades/s_10.gif","Cards/spades/s_jack.gif","Cards/spades/s_queen.gif","Cards/spades/s_king.gif","Cards/spades/s_ace.gif","reducer/card-reducer.ts","reducer/CardState.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CardContext","createContext","AboutGame","context","useContext","useEffect","Aos","init","duration","useState","value","setValue","error","setError","aboutGameVizible","className","data-aos","onSubmit","e","preventDefault","trim","setPlayerName","setAboutGameVizible","type","onChange","target","onFocus","NextRound","roundWinner","round","playerCount","computerCount","playerName","setNextRoundVizible","setRound","addPlayerCount","addComputerCount","setComputerCardVizible","setPlayerCardVizible","userWinStop","computerWinStop","gameEndStop","src","alt","onClick","Players","Card","useSound","clickUrl","sprite","in","click","computerWinUrl","computerWin","soundC","userWinUrl","userWin","soundU","gameEndUrl","gameEnd","soundG","stop","cardShake","setCardShake","card","deck","playerCardData","computerCardData","nextRoundVisible","playerCardVizible","computerCardVizible","setRoundWinner","setComputerCardData","setPlayerCardData","userCard","playerSuitNum","playerCardIndex","computerCard","computerSuitNum","computerCardIndex","getNumber","max","min","Math","floor","random","nextRoundProps","playersProps","CSSTransition","classNames","timeout","mountOnEnter","unmountOnExit","closeCard","id","setTimeout","userCardIndex","getWinner","disabled","SET_PLAYER_COUNT","SET_COMPUTER_COUNT","SET_ABOUT_GAME_VIZIBLE","SET_ROUND","SET_ROUND_WINNER","SET_USER_CARD","SET_COMPUTER_CARD","SET_NEXT_ROUND_VIZIBLE","SET_COMPUTER_CARD_VIZIBLE","SET_USER_CARD_VIZIBLE","SET_PLAYER_NAME","hearts","h_2","h_3","h_4","h_5","h_6","h_7","h_8","h_9","h_10","h_jack","h_queen","h_king","h_ace","diamonds","d_2","d_3","d_4","d_5","d_6","d_7","d_8","d_9","d_10","d_jack","d_queen","d_king","d_ace","clubs","c_2","c_3","c_4","c_5","c_6","c_7","c_8","c_9","c_10","c_jack","c_queen","c_king","c_ace","getNewArray","arr","map","i","cardInitialState","s_2","s_3","s_4","s_5","s_6","s_7","s_8","s_9","s_10","s_jack","s_queen","s_king","s_ace","cardActions","payload","playerCardVisible","name","cardReducer","state","action","CardState","children","useReducer","dispatch","cadrFunctions","nextRoundVizible","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed5d8cb7.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { CardInitialStateType, ComputerCardType, PlayerCardType } from \"./card-reducer\";\r\n\r\ntype CardFunctionsType = {\r\n    addPlayerCount: (playerCount :number) => void\r\n    addComputerCount: (computerCount:number) => void\r\n    setAboutGameVizible: (setAboutGameVizible: boolean) => void\r\n    setRound: (round:number) => void\r\n    setRoundWinner: (roundWinner: string) => void\r\n    setComputerCardData: (payload: ComputerCardType) =>void\r\n    setPlayerCardData: (payload: PlayerCardType) => void\r\n    setNextRoundVizible: (nextRoundVizible: boolean) => void\r\n    setPlayerCardVizible: (playerCardVizible: boolean) => void\r\n    setComputerCardVizible: (computerCardVizible: boolean) => void \r\n    setPlayerName: (name: string) => void\r\n}\r\ntype ContextValueType = CardFunctionsType&CardInitialStateType|null\r\n\r\nexport const CardContext = createContext<ContextValueType>(null)","//@ts-ignore\r\nimport Aos from 'aos'\r\nimport React, { FormEvent,useContext, useEffect, useState } from 'react'\r\nimport { CardContext } from './reducer/cardContext'\r\n\r\n\r\n\r\nconst AboutGame = () => {\r\n    const context = useContext(CardContext)\r\n\r\n    useEffect(() => { Aos.init({ duration: 1500 }) }, [])\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const [error, setError] = useState(false)\r\n    const handlerSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        if (value.trim()) {\r\n            context?.setPlayerName(value)\r\n            context?.setAboutGameVizible(false)\r\n            setValue(\"\")\r\n        }else{\r\n            setError(true)\r\n        }\r\n\r\n    }\r\n\r\n    if(!context?.aboutGameVizible){\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"aboutGame d-flex flex-column align-items-center justify-content-center\" data-aos=\"zoom-in\">\r\n            <div className=\"text-center about__info\">\r\n                Hi!!! This is a simple card game where the user plays with a computer. The winner is the one who  win five times with the hight card.\r\n                Enter your name and go to play!!!\r\n            </div>\r\n            <div className=\"about__form text-center mt-4\">\r\n                <form onSubmit={handlerSubmit}>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value)} value= {value} onFocus={()=>setError(false)}/>\r\n                    <span className=\"error\">{error&&\"Enter your name please\"}</span>\r\n                    <button className=\"btn btn-primary mt-2\" >Go to play</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AboutGame","export default __webpack_public_path__ + \"static/media/closekards.f2328bca.gif\";","import React from 'react'\r\nimport { PlayFunction } from 'use-sound/dist/types'\r\n\r\ntype PropsType = {\r\n    playerName: string\r\n    round: number\r\n    roundWinner: string\r\n    playerCount: number\r\n    computerCount: number\r\n    setNextRoundVizible: (nextRoundVizible: boolean) => void\r\n    setRound: (round: number) => void\r\n    addPlayerCount: (playerCount: number) => void\r\n    addComputerCount: (computerCount: number) => void\r\n    setComputerCardVizible: (computerCardVizible: boolean) => void\r\n    setPlayerCardVizible: (playerCardVizible: boolean) => void\r\n    userWinStop: (id?: string | undefined) => void\r\n    computerWinStop: (id?: string | undefined) => void\r\n    gameEndStop: (id?: string | undefined) => void\r\n}\r\nconst NextRound: React.FC<PropsType> = ({\r\n    roundWinner, round, playerCount, computerCount, playerName,\r\n    setNextRoundVizible, setRound, addPlayerCount, addComputerCount,\r\n    setComputerCardVizible, setPlayerCardVizible, userWinStop,\r\n    computerWinStop,gameEndStop\r\n}) => {\r\n\r\n\r\n    const handleClick = () => {\r\n        roundWinner === playerName ? userWinStop() : computerWinStop()\r\n        setComputerCardVizible(false)\r\n        setPlayerCardVizible(false)\r\n        setNextRoundVizible(false)\r\n        setRound(round + 1)\r\n    }\r\n    const newGame = () => {\r\n        gameEndStop()\r\n        setComputerCardVizible(false)\r\n        setPlayerCardVizible(false)\r\n        setNextRoundVizible(false)\r\n        setRound(1)\r\n        addPlayerCount(0)\r\n        addComputerCount(0)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='nextRound d-flex flex-column align-items-center justify-content-center'>\r\n            {playerCount < 5 && computerCount < 5\r\n                ? <div className='text-center'>\r\n                    <div className=\"nextRound__info\">\r\n                        {roundWinner === \"draw\"\r\n                            ? `In ${round} round not winner!!!`\r\n                            : <div>\r\n                                {`In ${round} round win ${roundWinner} !!!`}\r\n                                <div className=\"nextRound__img\">\r\n                                    {roundWinner === playerName\r\n                                        ? <img src=\"https://www.clipartmax.com/png/full/191-1917338_programmer-computer-programming-clip-art-programador-informatico.png\" alt=\"\" />\r\n                                        : <img src=\"https://www.primolo.de/sites/default/files/user_generated_content/website_content_images/5048-kumlehn/computer.gif\" alt=\"\" />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"nextRound__button\">\r\n                        <div className=\"nextRound__button text-center\">\r\n                            <div className=\"nextRound__button__info\">\r\n                                Go to next round\r\n                            </div>\r\n                            <button onClick={handleClick} className=\"btn btn-primary\" >\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <div className=\"gameOver__button text-center\">\r\n                    <div className=\"gameOver__button__info\">\r\n                        Play end, {roundWinner === \"computer\" ? roundWinner : \"you\"} win !!!\r\n                        <div className=\"nextRound__img\">\r\n                            {roundWinner === playerName\r\n                                ? <img src=\"https://www.clipartmax.com/png/full/191-1917338_programmer-computer-programming-clip-art-programador-informatico.png\" alt=\"\" />\r\n                                : <img src=\"https://www.primolo.de/sites/default/files/user_generated_content/website_content_images/5048-kumlehn/computer.gif\" alt=\"\" />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={newGame} className=\"btn btn-primary\" >Play Again</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default NextRound","import React from 'react'\r\n\r\n\r\ntype PropsType = {\r\n    playerCount: number\r\n    computerCount: number\r\n    round: number\r\n    setAboutGameVizible: (setAboutGameVizible: boolean) => void\r\n    setComputerCardVizible: (computerCardVizible: boolean) => void\r\n    setPlayerCardVizible: (playerCardVizible: boolean) => void\r\n    setNextRoundVizible: (nextRoundVizible: boolean) => void\r\n    setRound: (round: number) => void\r\n    addPlayerCount: (playerCount: number) => void\r\n    addComputerCount: (computerCount: number) => void\r\n\r\n}\r\n\r\nconst Players: React.FC<PropsType> = ({ playerCount, computerCount, round,\r\n    setAboutGameVizible, setComputerCardVizible, setPlayerCardVizible\r\n    , setNextRoundVizible, setRound, addPlayerCount, addComputerCount }) => {\r\n\r\n\r\n    const endGame = () => {\r\n        setComputerCardVizible(false)\r\n        setPlayerCardVizible(false)\r\n        setNextRoundVizible(false)\r\n        setRound(1)\r\n        addPlayerCount(0)\r\n        addComputerCount(0)\r\n        setAboutGameVizible(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"players d-flex justify-content-between \">\r\n            <div className=\"player \">\r\n                <div className=\"player__img\">\r\n                    <img src=\"https://www.clipartmax.com/png/full/191-1917338_programmer-computer-programming-clip-art-programador-informatico.png\" alt=\"Player\" />\r\n                </div>\r\n                <div className=\"player__count text-center\">\r\n                    Count : {playerCount}\r\n                </div>\r\n            </div>\r\n            <div className=\"round text-center pt-4\">\r\n                <div className=\"round__button\">\r\n                    <button className=\"btn btn-primary\" onClick={endGame}>End</button>\r\n                </div>\r\n                Round  {round}\r\n            </div>\r\n            <div className=\"computer \">\r\n                <div className=\"computer__img\">\r\n                    <img src=\"https://www.primolo.de/sites/default/files/user_generated_content/website_content_images/5048-kumlehn/computer.gif\" alt=\"computer\" />\r\n                </div>\r\n                <div className=\"computer__count text-center\">\r\n                    Count : {computerCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Players","export default __webpack_public_path__ + \"static/media/click.f01ac587.mp3\";","export default __webpack_public_path__ + \"static/media/computerWin.35a0ec59.mp3\";","export default __webpack_public_path__ + \"static/media/userWin.d2bc88e6.mp3\";","export default __webpack_public_path__ + \"static/media/gameEnd.969d7c53.mp3\";","import React, { useContext, useEffect, useState } from 'react';\r\n//@ts-ignore\r\nimport Aos from 'aos'\r\n//@ts-ignore\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport closeCard from './Cards/spades/closekards.gif'\r\nimport NextRound from './NextRound';\r\nimport Players from './Players';\r\nimport { CardContext } from './reducer/cardContext';\r\nimport useSound from 'use-sound';\r\nimport clickUrl from './sound/click.mp3';\r\nimport computerWinUrl from './sound/computerWin.mp3';\r\nimport userWinUrl from './sound/userWin.mp3';\r\nimport gameEndUrl from './sound/gameEnd.mp3';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Card() {\r\n    const [click] = useSound(clickUrl, {\r\n        sprite: {\r\n            in: [0, 2000]\r\n        }\r\n    })\r\n    const [computerWin, { ...soundC }] = useSound(computerWinUrl)\r\n    const [userWin, { ...soundU }] = useSound(userWinUrl)\r\n    const [gameEnd, { ...soundG }] = useSound(gameEndUrl)\r\n    const computerWinStop = soundC.stop\r\n    const userWinStop = soundU.stop\r\n    const gameEndStop = soundG.stop\r\n\r\n\r\n\r\n    useEffect(() => { Aos.init({ duration: 1500 }) }, [])\r\n\r\n\r\n\r\n    const [cardShake, setCardShake] = useState(false)\r\n\r\n    const { ...card } = useContext(CardContext)\r\n    const {\r\n        playerName, deck, playerCount,\r\n        computerCount, round, roundWinner,\r\n        playerCardData, computerCardData, nextRoundVisible,\r\n        playerCardVizible, computerCardVizible,\r\n        addPlayerCount, addComputerCount, setAboutGameVizible,\r\n        setRound, setRoundWinner, setComputerCardData,\r\n        setPlayerCardData, setNextRoundVizible, setPlayerCardVizible,\r\n        setComputerCardVizible } = { ...card }\r\n\r\n\r\n\r\n\r\n\r\n    const userCard = deck[playerCardData.playerSuitNum][playerCardData.playerCardIndex].card\r\n    const computerCard = deck[computerCardData.computerSuitNum][computerCardData.computerCardIndex].card\r\n\r\n\r\n\r\n\r\n    const getWinner = (userCardIndex: number, computerCardIndex: number) => {\r\n        setNextRoundVizible(true)\r\n        setCardShake(false)\r\n        if (userCardIndex > computerCardIndex) {\r\n            playerCount === 4 ? gameEnd() : userWin()\r\n            setRoundWinner(playerName)\r\n            addPlayerCount(playerCount + 1)\r\n        }\r\n        else if (userCardIndex < computerCardIndex) {\r\n            computerCount === 4 ? gameEnd() : computerWin()\r\n            setRoundWinner(\"computer\")\r\n            addComputerCount(computerCount + 1)\r\n        } else {\r\n            computerWin()\r\n            setRoundWinner(\"draw\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const getNumber = (max: number, min: number) => (Math.floor(Math.random() * (max - min + 1)) + min)\r\n\r\n    const openCards = () => {\r\n        setCardShake(true)\r\n        click({ id: \"in\" })\r\n        const playerSuitNum = getNumber(3, 0)\r\n        const playerCardIndex = getNumber(12, 0)\r\n        const computerSuitNum = getNumber(3, 0)\r\n        const computerCardIndex = getNumber(12, 0)\r\n        setPlayerCardData({ playerSuitNum, playerCardIndex })\r\n        setComputerCardData({ computerSuitNum, computerCardIndex })\r\n        setTimeout(() => {\r\n            setPlayerCardVizible(true)\r\n        }, 1500)\r\n        setTimeout(() => {\r\n            setComputerCardVizible(true)\r\n        }, 3000)\r\n        setTimeout(() => {\r\n            getWinner(playerCardIndex, computerCardIndex)\r\n        }, 4000)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const nextRoundProps = {\r\n        round, playerName, roundWinner, computerCount,\r\n        playerCount, setNextRoundVizible,\r\n        setRound, addPlayerCount,\r\n        addComputerCount, setComputerCardVizible,\r\n        setPlayerCardVizible, computerWinStop, userWinStop,\r\n        gameEndStop\r\n    }\r\n\r\n    const playersProps = {\r\n        computerCount, playerCount, round,\r\n        setAboutGameVizible, setComputerCardVizible,\r\n        setPlayerCardVizible, setNextRoundVizible, setRound,\r\n        addPlayerCount, addComputerCount\r\n    }\r\n\r\n    return (\r\n        <div className=\"cards\" data-aos=\"zoom-in\">\r\n            <CSSTransition in={nextRoundVisible} classNames={\"nextRound\"} timeout={500} mountOnEnter unmountOnExit>\r\n                <NextRound {...nextRoundProps} />\r\n            </CSSTransition>\r\n            <Players {...playersProps} />\r\n            <div className=\"cards__body d-flex justify-content-around \">\r\n                <div className=\"playerCard text-center\">\r\n                    <div className=\"playerCard__text\">\r\n                        Playercard\r\n                    </div>\r\n                    {playerCardVizible\r\n                        ? <img src={userCard} alt=\"dfhdh\" className=\"openCard\" />\r\n                        : <img src={closeCard} alt=\"dfhdh\" className={`${cardShake ? \"shake\" : \"\"}`} />\r\n                    }\r\n\r\n                </div>\r\n\r\n                <div className=\"computerCard text-center\">\r\n                    <div className=\"computerCard__text\">\r\n                        Computercard\r\n                    </div>\r\n                    {computerCardVizible\r\n                        ? <img src={computerCard} alt=\"dfhdh\" className=\"openCard\" />\r\n                        : <img src={closeCard} alt=\"dfhdh\" className={`${cardShake ? \"shake\" : \"\"}`} />\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"cards__button text-center\">\r\n                <button onClick={openCards} disabled={cardShake} className=\"btn btn-primary\" >Open Cards</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/c_2.bf0d67a9.gif\";","export default __webpack_public_path__ + \"static/media/c_3.608e22f3.gif\";","export default __webpack_public_path__ + \"static/media/c_4.95ed58b5.gif\";","export default __webpack_public_path__ + \"static/media/c_5.11771a11.gif\";","export default __webpack_public_path__ + \"static/media/c_6.79081fd0.gif\";","export default __webpack_public_path__ + \"static/media/c_7.f6aa64d6.gif\";","export default __webpack_public_path__ + \"static/media/c_8.bfd0d083.gif\";","export default __webpack_public_path__ + \"static/media/c_9.a20a764a.gif\";","export default __webpack_public_path__ + \"static/media/c_10.4343b5b7.gif\";","export default __webpack_public_path__ + \"static/media/c_jack.cdbb12fa.gif\";","export default __webpack_public_path__ + \"static/media/c_queen.020c324d.gif\";","export default __webpack_public_path__ + \"static/media/c_king.4f6283a8.gif\";","export default __webpack_public_path__ + \"static/media/c_ace.a6b48bd1.gif\";","export default __webpack_public_path__ + \"static/media/d_2.957769d8.gif\";","export default __webpack_public_path__ + \"static/media/d_3.85b93189.gif\";","export default __webpack_public_path__ + \"static/media/d_4.68eae293.gif\";","export default __webpack_public_path__ + \"static/media/d_5.f721c296.gif\";","export default __webpack_public_path__ + \"static/media/d_6.8e341fed.gif\";","export default __webpack_public_path__ + \"static/media/d_7.12e0a6d9.gif\";","export default __webpack_public_path__ + \"static/media/d_8.6c300f4a.gif\";","export default __webpack_public_path__ + \"static/media/d_9.d79f7d23.gif\";","export default __webpack_public_path__ + \"static/media/d_10.d3da4c0e.gif\";","export default __webpack_public_path__ + \"static/media/d_jack.1226504b.gif\";","export default __webpack_public_path__ + \"static/media/d_queen.f6787e08.gif\";","export default __webpack_public_path__ + \"static/media/d_king.3053e66f.gif\";","export default __webpack_public_path__ + \"static/media/d_ace.01825f02.gif\";","export default __webpack_public_path__ + \"static/media/h_2.de97e027.gif\";","export default __webpack_public_path__ + \"static/media/h_3.d121b284.gif\";","export default __webpack_public_path__ + \"static/media/h_4.b878213c.gif\";","export default __webpack_public_path__ + \"static/media/h_5.eb5e46d4.gif\";","export default __webpack_public_path__ + \"static/media/h_6.e9787ced.gif\";","export default __webpack_public_path__ + \"static/media/h_7.3a8d1658.gif\";","export default __webpack_public_path__ + \"static/media/h_8.1ffe19c8.gif\";","export default __webpack_public_path__ + \"static/media/h_9.fe398946.gif\";","export default __webpack_public_path__ + \"static/media/h_10.0142e868.gif\";","export default __webpack_public_path__ + \"static/media/h_jack.46f75f41.gif\";","export default __webpack_public_path__ + \"static/media/h_queen.0f2eeb0b.gif\";","export default __webpack_public_path__ + \"static/media/h_king.992054e3.gif\";","export default __webpack_public_path__ + \"static/media/h_ace.e0a52afd.gif\";","export default __webpack_public_path__ + \"static/media/s_2.daad6b4e.gif\";","export default __webpack_public_path__ + \"static/media/s_3.3303fadc.gif\";","export default __webpack_public_path__ + \"static/media/s_4.933a6ca0.gif\";","export default __webpack_public_path__ + \"static/media/s_5.fd075226.gif\";","export default __webpack_public_path__ + \"static/media/s_6.bac8c8e8.gif\";","export default __webpack_public_path__ + \"static/media/s_7.9c381755.gif\";","export default __webpack_public_path__ + \"static/media/s_8.56ae5f6c.gif\";","export default __webpack_public_path__ + \"static/media/s_9.10457f69.gif\";","export default __webpack_public_path__ + \"static/media/s_10.32449096.gif\";","export default __webpack_public_path__ + \"static/media/s_jack.721d6a7a.gif\";","export default __webpack_public_path__ + \"static/media/s_queen.7ab0758c.gif\";","export default __webpack_public_path__ + \"static/media/s_king.acefbab3.gif\";","export default __webpack_public_path__ + \"static/media/s_ace.4625e535.gif\";","import c_2 from '../Cards/clubs/c_2.gif'\r\nimport c_3 from '../Cards/clubs/c_3.gif'\r\nimport c_4 from '../Cards/clubs/c_4.gif'\r\nimport c_5 from '../Cards/clubs/c_5.gif'\r\nimport c_6 from '../Cards/clubs/c_6.gif'\r\nimport c_7 from '../Cards/clubs/c_7.gif'\r\nimport c_8 from '../Cards/clubs/c_8.gif'\r\nimport c_9 from '../Cards/clubs/c_9.gif'\r\nimport c_10 from '../Cards/clubs/c_10.gif'\r\nimport c_jack from '../Cards/clubs/c_jack.gif'\r\nimport c_queen from '../Cards/clubs/c_queen.gif'\r\nimport c_king from '../Cards/clubs/c_king.gif'\r\nimport c_ace from '../Cards/clubs/c_ace.gif'\r\n// \r\nimport d_2 from '../Cards/diamonds/d_2.gif'\r\nimport d_3 from '../Cards/diamonds/d_3.gif'\r\nimport d_4 from '../Cards/diamonds/d_4.gif'\r\nimport d_5 from '../Cards/diamonds/d_5.gif'\r\nimport d_6 from '../Cards/diamonds/d_6.gif'\r\nimport d_7 from '../Cards/diamonds/d_7.gif'\r\nimport d_8 from '../Cards/diamonds/d_8.gif'\r\nimport d_9 from '../Cards/diamonds/d_9.gif'\r\nimport d_10 from '../Cards/diamonds/d_10.gif'\r\nimport d_jack from '../Cards/diamonds/d_jack.gif'\r\nimport d_queen from '../Cards/diamonds/d_queen.gif'\r\nimport d_king from '../Cards/diamonds/d_king.gif'\r\nimport d_ace from '../Cards/diamonds/d_ace.gif'\r\n// \r\nimport h_2 from '../Cards/hearts/h_2.gif'\r\nimport h_3 from '../Cards/hearts/h_3.gif'\r\nimport h_4 from '../Cards/hearts/h_4.gif'\r\nimport h_5 from '../Cards/hearts/h_5.gif'\r\nimport h_6 from '../Cards/hearts/h_6.gif'\r\nimport h_7 from '../Cards/hearts/h_7.gif'\r\nimport h_8 from '../Cards/hearts/h_8.gif'\r\nimport h_9 from '../Cards/hearts/h_9.gif'\r\nimport h_10 from '../Cards/hearts/h_10.gif'\r\nimport h_jack from '../Cards/hearts/h_jack.gif'\r\nimport h_queen from '../Cards/hearts/h_queen.gif'\r\nimport h_king from '../Cards/hearts/h_king.gif'\r\nimport h_ace from '../Cards/hearts/h_ace.gif'\r\n// \r\nimport s_2 from '../Cards/spades/s_2.gif'\r\nimport s_3 from '../Cards/spades/s_3.gif'\r\nimport s_4 from '../Cards/spades/s_4.gif'\r\nimport s_5 from '../Cards/spades/s_5.gif'\r\nimport s_6 from '../Cards/spades/s_6.gif'\r\nimport s_7 from '../Cards/spades/s_7.gif'\r\nimport s_8 from '../Cards/spades/s_8.gif'\r\nimport s_9 from '../Cards/spades/s_9.gif'\r\nimport s_10 from '../Cards/spades/s_10.gif'\r\nimport s_jack from '../Cards/spades/s_jack.gif'\r\nimport s_queen from '../Cards/spades/s_queen.gif'\r\nimport s_king from '../Cards/spades/s_king.gif'\r\nimport s_ace from '../Cards/spades/s_ace.gif'\r\n\r\n\r\nconst SET_PLAYER_COUNT = 'SET_PLAYER_COUNT'\r\nconst SET_COMPUTER_COUNT = 'SET_COMPUTER_COUNT'\r\nconst SET_ABOUT_GAME_VIZIBLE = 'SET_ABOUT_GAME_VIZIBLE'\r\nconst SET_ROUND = 'SET_ROUND'\r\nconst SET_ROUND_WINNER = 'SET_ROUND_WINNER'\r\nconst SET_USER_CARD = 'SET_USER_CARD'\r\nconst SET_COMPUTER_CARD = 'SET_COMPUTER_CARD'\r\nconst SET_NEXT_ROUND_VIZIBLE = 'SET_NEXT_ROUND_VIZIBLE'\r\nconst SET_COMPUTER_CARD_VIZIBLE = 'SET_COMPUTER_CARD_VIZIBLE'\r\nconst SET_USER_CARD_VIZIBLE = 'SET_USER_CARD_VIZIBLE'\r\nconst SET_PLAYER_NAME = 'SET_PLAYER_NAME'\r\n\r\n\r\nconst spades = [s_2, s_3, s_4, s_5, s_6, s_7, s_8, s_9, s_10, s_jack, s_queen, s_king, s_ace]\r\nconst hearts = [h_2, h_3, h_4, h_5, h_6, h_7, h_8, h_9, h_10, h_jack, h_queen, h_king, h_ace]\r\nconst diamonds = [d_2, d_3, d_4, d_5, d_6, d_7, d_8, d_9, d_10, d_jack, d_queen, d_king, d_ace]\r\nconst clubs = [c_2, c_3, c_4, c_5, c_6, c_7, c_8, c_9, c_10, c_jack, c_queen, c_king, c_ace]\r\n\r\nconst getNewArray = (arr: Array<string>) => {\r\n    return arr.map((card, i) => {\r\n        return { card: card, value: i }\r\n    })\r\n}\r\n\r\nconst spadesData = getNewArray(spades)\r\nconst heartsData = getNewArray(hearts)\r\nconst diamondsData = getNewArray(diamonds)\r\nconst clubsData = getNewArray(clubs)\r\n\r\n\r\nexport const cardInitialState = {\r\n    deck: [spadesData, heartsData, diamondsData, clubsData],\r\n    playerCount: 0,\r\n    computerCount: 0,\r\n    aboutGameVizible: true,\r\n    round: 1,\r\n    roundWinner: \"computer\",\r\n    nextRoundVisible: false,\r\n    playerCardVizible: false,\r\n    computerCardVizible: false,\r\n    playerName: \"\",\r\n    playerCardData: {\r\n        playerSuitNum: 0,\r\n        playerCardIndex: 0\r\n    },\r\n    computerCardData: {\r\n        computerSuitNum: 0,\r\n        computerCardIndex: 0\r\n    }\r\n}\r\n\r\nexport type PlayerCardType = {\r\n    playerSuitNum: number;\r\n    playerCardIndex: number\r\n}\r\nexport type ComputerCardType = {\r\n    computerSuitNum: number;\r\n    computerCardIndex: number\r\n}\r\n\r\nexport type CardInitialStateType = typeof cardInitialState\r\n\r\nexport const cardActions = {\r\n    setPlayerCount: (playerCount: number) => ({ type: SET_PLAYER_COUNT, playerCount } as const),\r\n    setComputerCount: (computerCount: number) => ({ type: SET_COMPUTER_COUNT, computerCount } as const),\r\n    setAboutGameVizible: (aboutGameVizible: boolean) => ({ type: SET_ABOUT_GAME_VIZIBLE, aboutGameVizible } as const),\r\n    setRound: (round: number) => ({ type: SET_ROUND, round } as const),\r\n    setRoundWinner: (roundWinner: string) => ({ type: SET_ROUND_WINNER, roundWinner } as const),\r\n    setPlayerCardData: (payload: PlayerCardType) => ({ type: SET_USER_CARD, payload } as const),\r\n    setComputerCardData: (payload: ComputerCardType) => ({ type: SET_COMPUTER_CARD, payload } as const),\r\n    setNextRoundVizible: (nextRoundVisible: boolean) => ({ type: SET_NEXT_ROUND_VIZIBLE, nextRoundVisible } as const),\r\n    setPlayerCardVizible: (playerCardVisible: boolean) => ({ type: SET_USER_CARD_VIZIBLE, playerCardVisible } as const),\r\n    setComputerCardVizible: (computerCardVizible: boolean) => ({ type: SET_COMPUTER_CARD_VIZIBLE, computerCardVizible } as const),\r\n    setPlayerName: (name: string) => ({ type: SET_PLAYER_NAME, name } as const)\r\n}\r\n\r\n\r\ntype ProprtisType<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<ProprtisType<T>>\r\n\r\n\r\nexport type CardActionsType = InferActionsType<typeof cardActions>\r\n\r\n\r\nexport const cardReducer = (state: CardInitialStateType = cardInitialState, action: CardActionsType): CardInitialStateType => {\r\n    switch (action.type) {\r\n        case SET_PLAYER_COUNT:\r\n            return {\r\n                ...state, playerCount: action.playerCount\r\n            }\r\n        case SET_COMPUTER_COUNT:\r\n            return {\r\n                ...state, computerCount: action.computerCount\r\n            }\r\n        case SET_ABOUT_GAME_VIZIBLE :\r\n            return {\r\n                ...state, aboutGameVizible: action.aboutGameVizible\r\n            }\r\n        case SET_ROUND:\r\n            return {\r\n                ...state, round: action.round\r\n            }\r\n        case SET_ROUND_WINNER:\r\n            return {\r\n                ...state, roundWinner: action.roundWinner\r\n            }\r\n        case SET_USER_CARD:\r\n            return {\r\n                ...state, playerCardData: { ...action.payload }\r\n            }\r\n        case SET_COMPUTER_CARD:\r\n            return {\r\n                ...state, computerCardData: { ...action.payload }\r\n            }\r\n        case SET_NEXT_ROUND_VIZIBLE:\r\n            return {\r\n                ...state, nextRoundVisible: action.nextRoundVisible\r\n            }\r\n        case SET_COMPUTER_CARD_VIZIBLE:\r\n            return {\r\n                ...state, computerCardVizible: action.computerCardVizible\r\n            }\r\n        case SET_USER_CARD_VIZIBLE:\r\n            return {\r\n                ...state, playerCardVizible: action.playerCardVisible\r\n            }\r\n        case SET_PLAYER_NAME:\r\n            return {\r\n                ...state, playerName: action.name\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { useReducer } from 'react'\r\nimport { cardActions, cardInitialState, cardReducer, ComputerCardType, PlayerCardType } from './card-reducer'\r\nimport { CardContext } from './cardContext'\r\n\r\n\r\nconst CardState: React.FC = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cardReducer, cardInitialState)\r\n    const cadrFunctions = {\r\n        addPlayerCount: (playerCount: number) => dispatch(cardActions.setPlayerCount(playerCount)),\r\n        addComputerCount: (computerCount: number) => dispatch(cardActions.setComputerCount(computerCount)),\r\n        setAboutGameVizible: (setAboutGameVizible: boolean) => dispatch(cardActions.setAboutGameVizible(setAboutGameVizible)),\r\n        setRound: (round: number) => dispatch(cardActions.setRound(round)),\r\n        setRoundWinner: (roundWinner: string) => dispatch(cardActions.setRoundWinner(roundWinner)),\r\n        setPlayerCardVizible: (playerCardVizible: boolean) => dispatch(cardActions.setPlayerCardVizible(playerCardVizible)),\r\n        setComputerCardVizible: (computerCardVizible: boolean) => dispatch(cardActions.setComputerCardVizible(computerCardVizible)),\r\n        setComputerCardData: (payload: ComputerCardType) => { dispatch(cardActions.setComputerCardData(payload)) },\r\n        setPlayerCardData: (payload: PlayerCardType) => dispatch(cardActions.setPlayerCardData(payload)),\r\n        setNextRoundVizible: (nextRoundVizible: boolean) => dispatch(cardActions.setNextRoundVizible(nextRoundVizible)),\r\n        setPlayerName: (name:string) => dispatch(cardActions.setPlayerName(name))\r\n    }\r\n\r\n\r\n    return (\r\n        <CardContext.Provider value={{ ...state, ...cadrFunctions }}>\r\n            {children}\r\n        </CardContext.Provider>\r\n    )\r\n}\r\nexport default CardState\r\n\r\n","import React from 'react';\r\nimport AboutGame from './AboutGame';\r\nimport Card from './Card';\r\nimport CardState from './reducer/CardState';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CardState>\r\n        <AboutGame/>\r\n        <Card />\r\n      </CardState>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'aos/dist/aos.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}